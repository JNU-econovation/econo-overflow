buildscript {
    ext {
        projectName = 'Overflow'
        projectVersion = '1.0.1'
        springBootVersion = '2.7.5'
        dependencyManagementVersion = '1.0.15.RELEASE'
        spotlessVersion = '6.8.0'
        asciidoctorVersion = '3.3.2'
        epagesRestDocsApiSpecVersion = '0.16.0'

        // dependencies
        jsonwebtokenVersion = '0.11.5'
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${dependencyManagementVersion}"

    id "com.diffplug.spotless" version "${spotlessVersion}"
}

group = 'com.econovation'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '1.8'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

/** apply tasks */
apply from: './tasks/formatting-task.gradle'
apply from: './tasks/install-git-hooks.gradle'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // database
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // encryption
    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'

    // jwt
    implementation "io.jsonwebtoken:jjwt-api:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-impl:${jsonwebtokenVersion}"
    implementation "io.jsonwebtoken:jjwt-jackson:${jsonwebtokenVersion}"
}

test {
    useJUnitPlatform()

    testLogging {
        events "failed"
        exceptionFormat "full"
    }
}
jar {
    enabled = false;
}
