# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: overflow CI/CD

on:
  push:
    branches: [ "infra" ]
  pull_request:
    branches: [ "infra" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    ## jdk setting
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    # gradle setting
    - name: init with Gradle
      uses: gradle/gradle-build-action@v2
    - run: gradle init

    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 7.5.1
        arguments: build

      ## gradle build
    - name: Build with Gradle
      working-directory: ./be/overflow
      run: ./gradlew build -x test


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: v0.7.0

      ## docker build & push to develop
    - name: Docker build & push to dev
      working-directory: ./be/overflow
      if: contains(github.ref, 'infra')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -t ${{ secrets.DOCKER_REPO }}/ecnv-overflow .
        docker push ${{ secrets.DOCKER_REPO }}/ecnv-overflow



      ## deploy to develop
    - name: Deploy to dev
      uses: appleboy/ssh-action@master
      id: deploy-dev
      if: contains(github.ref, 'infra')
      with:
        host: ${{ secrets.HOST_DEV }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.PASSWORD }}
        port: 22
        working-directory: ./be/overflow
        script: |
          pwd
          ls -al
          cd ecnv-overflow/be/overflow/
          sudo usermod -a -G docker $USER
          docker pull ${{ secrets.DOCKER_REPO }}/ecnv-overflow
          docker-compose up -d
          docker image prune -f
